# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: daemon_api.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x64\x61\x65mon_api.proto\x12\x11recc.proto.daemon\"\x14\n\x03Pit\x12\r\n\x05\x64\x65lay\x18\x01 \x01(\x02\"\x11\n\x03Pat\x12\n\n\x02ok\x18\x01 \x01(\x08\"\xbf\x01\n\tRegisterQ\x12\x0f\n\x07session\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\x12\x38\n\x06kwargs\x18\x03 \x03(\x0b\x32(.recc.proto.daemon.RegisterQ.KwargsEntry\x12\x14\n\x0ctest_sm_name\x18\x04 \x01(\t\x12\x14\n\x0ctest_sm_pass\x18\x05 \x01(\t\x1a-\n\x0bKwargsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"s\n\tRegisterA\x12-\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1f.recc.proto.daemon.RegisterCode\x12\r\n\x05is_sm\x18\x02 \x01(\x08\x12\x13\n\x0bmin_sm_size\x18\x03 \x01(\x05\x12\x13\n\x0bmin_sm_byte\x18\x04 \x01(\x05\":\n\tArrayInfo\x12\r\n\x05shape\x18\x01 \x03(\x05\x12\r\n\x05\x64type\x18\x02 \x01(\t\x12\x0f\n\x07strides\x18\x03 \x03(\x05\"\x83\x01\n\x07\x43ontent\x12\x0c\n\x04size\x18\x01 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x14\n\x07sm_name\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\x30\n\x05\x61rray\x18\x04 \x01(\x0b\x32\x1c.recc.proto.daemon.ArrayInfoH\x01\x88\x01\x01\x42\n\n\x08_sm_nameB\x08\n\x06_array\"\xa2\x02\n\x07PacketQ\x12\x0f\n\x07session\x18\x01 \x01(\t\x12\x0e\n\x06method\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\x12)\n\x06\x63oding\x18\x04 \x01(\x0e\x32\x19.recc.proto.daemon.Coding\x12(\n\x04\x61rgs\x18\x05 \x03(\x0b\x32\x1a.recc.proto.daemon.Content\x12\x36\n\x06kwargs\x18\x06 \x03(\x0b\x32&.recc.proto.daemon.PacketQ.KwargsEntry\x12\x10\n\x08sm_names\x18\x07 \x03(\t\x1aI\n\x0bKwargsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.recc.proto.daemon.Content:\x02\x38\x01\"\xb6\x01\n\x07PacketA\x12(\n\x04\x61rgs\x18\x03 \x03(\x0b\x32\x1a.recc.proto.daemon.Content\x12\x36\n\x06kwargs\x18\x04 \x03(\x0b\x32&.recc.proto.daemon.PacketA.KwargsEntry\x1aI\n\x0bKwargsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.recc.proto.daemon.Content:\x02\x38\x01*9\n\x0cRegisterCode\x12\x0b\n\x07Success\x10\x00\x12\x1c\n\x18NotFoundRegisterFunction\x10\x01*\x86\x03\n\x06\x43oding\x12\x07\n\x03Raw\x10\x00\x12\x0b\n\x07Pickle5\x10\x01\x12\x08\n\x04Json\x10\x02\x12\x0c\n\x08JsonZlib\x10\x03\x12\x0c\n\x08JsonGzip\x10\x04\x12\x0c\n\x08JsonLzma\x10\x05\x12\x0b\n\x07JsonBz2\x10\x06\x12\n\n\x06Pyjson\x10\x07\x12\x0e\n\nPyjsonZlib\x10\x08\x12\x0e\n\nPyjsonGzip\x10\t\x12\x0e\n\nPyjsonLzma\x10\n\x12\r\n\tPyjsonBz2\x10\x0b\x12\n\n\x06Orjson\x10\x0c\x12\x0e\n\nOrjsonZlib\x10\r\x12\x0e\n\nOrjsonGzip\x10\x0e\x12\x0e\n\nOrjsonLzma\x10\x0f\x12\r\n\tOrjsonBz2\x10\x10\x12\x0b\n\x07Msgpack\x10\x11\x12\x0f\n\x0bMsgpackZlib\x10\x12\x12\x0f\n\x0bMsgpackGzip\x10\x13\x12\x0f\n\x0bMsgpackLzma\x10\x14\x12\x0e\n\nMsgpackBz2\x10\x15\x12\x08\n\x04Yaml\x10\x16\x12\x0c\n\x08YamlZlib\x10\x17\x12\x0c\n\x08YamlGzip\x10\x18\x12\x0c\n\x08YamlLzma\x10\x19\x12\x0b\n\x07YamlBz2\x10\x1a\x32\xd8\x01\n\tDaemonApi\x12=\n\tHeartbeat\x12\x16.recc.proto.daemon.Pit\x1a\x16.recc.proto.daemon.Pat\"\x00\x12H\n\x08Register\x12\x1c.recc.proto.daemon.RegisterQ\x1a\x1c.recc.proto.daemon.RegisterA\"\x00\x12\x42\n\x06Packet\x12\x1a.recc.proto.daemon.PacketQ\x1a\x1a.recc.proto.daemon.PacketA\"\x00\x62\x06proto3')

_REGISTERCODE = DESCRIPTOR.enum_types_by_name['RegisterCode']
RegisterCode = enum_type_wrapper.EnumTypeWrapper(_REGISTERCODE)
_CODING = DESCRIPTOR.enum_types_by_name['Coding']
Coding = enum_type_wrapper.EnumTypeWrapper(_CODING)
Success = 0
NotFoundRegisterFunction = 1
Raw = 0
Pickle5 = 1
Json = 2
JsonZlib = 3
JsonGzip = 4
JsonLzma = 5
JsonBz2 = 6
Pyjson = 7
PyjsonZlib = 8
PyjsonGzip = 9
PyjsonLzma = 10
PyjsonBz2 = 11
Orjson = 12
OrjsonZlib = 13
OrjsonGzip = 14
OrjsonLzma = 15
OrjsonBz2 = 16
Msgpack = 17
MsgpackZlib = 18
MsgpackGzip = 19
MsgpackLzma = 20
MsgpackBz2 = 21
Yaml = 22
YamlZlib = 23
YamlGzip = 24
YamlLzma = 25
YamlBz2 = 26


_PIT = DESCRIPTOR.message_types_by_name['Pit']
_PAT = DESCRIPTOR.message_types_by_name['Pat']
_REGISTERQ = DESCRIPTOR.message_types_by_name['RegisterQ']
_REGISTERQ_KWARGSENTRY = _REGISTERQ.nested_types_by_name['KwargsEntry']
_REGISTERA = DESCRIPTOR.message_types_by_name['RegisterA']
_ARRAYINFO = DESCRIPTOR.message_types_by_name['ArrayInfo']
_CONTENT = DESCRIPTOR.message_types_by_name['Content']
_PACKETQ = DESCRIPTOR.message_types_by_name['PacketQ']
_PACKETQ_KWARGSENTRY = _PACKETQ.nested_types_by_name['KwargsEntry']
_PACKETA = DESCRIPTOR.message_types_by_name['PacketA']
_PACKETA_KWARGSENTRY = _PACKETA.nested_types_by_name['KwargsEntry']
Pit = _reflection.GeneratedProtocolMessageType('Pit', (_message.Message,), {
  'DESCRIPTOR' : _PIT,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.Pit)
  })
_sym_db.RegisterMessage(Pit)

Pat = _reflection.GeneratedProtocolMessageType('Pat', (_message.Message,), {
  'DESCRIPTOR' : _PAT,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.Pat)
  })
_sym_db.RegisterMessage(Pat)

RegisterQ = _reflection.GeneratedProtocolMessageType('RegisterQ', (_message.Message,), {

  'KwargsEntry' : _reflection.GeneratedProtocolMessageType('KwargsEntry', (_message.Message,), {
    'DESCRIPTOR' : _REGISTERQ_KWARGSENTRY,
    '__module__' : 'daemon_api_pb2'
    # @@protoc_insertion_point(class_scope:recc.proto.daemon.RegisterQ.KwargsEntry)
    })
  ,
  'DESCRIPTOR' : _REGISTERQ,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.RegisterQ)
  })
_sym_db.RegisterMessage(RegisterQ)
_sym_db.RegisterMessage(RegisterQ.KwargsEntry)

RegisterA = _reflection.GeneratedProtocolMessageType('RegisterA', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERA,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.RegisterA)
  })
_sym_db.RegisterMessage(RegisterA)

ArrayInfo = _reflection.GeneratedProtocolMessageType('ArrayInfo', (_message.Message,), {
  'DESCRIPTOR' : _ARRAYINFO,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.ArrayInfo)
  })
_sym_db.RegisterMessage(ArrayInfo)

Content = _reflection.GeneratedProtocolMessageType('Content', (_message.Message,), {
  'DESCRIPTOR' : _CONTENT,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.Content)
  })
_sym_db.RegisterMessage(Content)

PacketQ = _reflection.GeneratedProtocolMessageType('PacketQ', (_message.Message,), {

  'KwargsEntry' : _reflection.GeneratedProtocolMessageType('KwargsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PACKETQ_KWARGSENTRY,
    '__module__' : 'daemon_api_pb2'
    # @@protoc_insertion_point(class_scope:recc.proto.daemon.PacketQ.KwargsEntry)
    })
  ,
  'DESCRIPTOR' : _PACKETQ,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.PacketQ)
  })
_sym_db.RegisterMessage(PacketQ)
_sym_db.RegisterMessage(PacketQ.KwargsEntry)

PacketA = _reflection.GeneratedProtocolMessageType('PacketA', (_message.Message,), {

  'KwargsEntry' : _reflection.GeneratedProtocolMessageType('KwargsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PACKETA_KWARGSENTRY,
    '__module__' : 'daemon_api_pb2'
    # @@protoc_insertion_point(class_scope:recc.proto.daemon.PacketA.KwargsEntry)
    })
  ,
  'DESCRIPTOR' : _PACKETA,
  '__module__' : 'daemon_api_pb2'
  # @@protoc_insertion_point(class_scope:recc.proto.daemon.PacketA)
  })
_sym_db.RegisterMessage(PacketA)
_sym_db.RegisterMessage(PacketA.KwargsEntry)

_DAEMONAPI = DESCRIPTOR.services_by_name['DaemonApi']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REGISTERQ_KWARGSENTRY._options = None
  _REGISTERQ_KWARGSENTRY._serialized_options = b'8\001'
  _PACKETQ_KWARGSENTRY._options = None
  _PACKETQ_KWARGSENTRY._serialized_options = b'8\001'
  _PACKETA_KWARGSENTRY._options = None
  _PACKETA_KWARGSENTRY._serialized_options = b'8\001'
  _REGISTERCODE._serialized_start=1063
  _REGISTERCODE._serialized_end=1120
  _CODING._serialized_start=1123
  _CODING._serialized_end=1513
  _PIT._serialized_start=39
  _PIT._serialized_end=59
  _PAT._serialized_start=61
  _PAT._serialized_end=78
  _REGISTERQ._serialized_start=81
  _REGISTERQ._serialized_end=272
  _REGISTERQ_KWARGSENTRY._serialized_start=227
  _REGISTERQ_KWARGSENTRY._serialized_end=272
  _REGISTERA._serialized_start=274
  _REGISTERA._serialized_end=389
  _ARRAYINFO._serialized_start=391
  _ARRAYINFO._serialized_end=449
  _CONTENT._serialized_start=452
  _CONTENT._serialized_end=583
  _PACKETQ._serialized_start=586
  _PACKETQ._serialized_end=876
  _PACKETQ_KWARGSENTRY._serialized_start=803
  _PACKETQ_KWARGSENTRY._serialized_end=876
  _PACKETA._serialized_start=879
  _PACKETA._serialized_end=1061
  _PACKETA_KWARGSENTRY._serialized_start=803
  _PACKETA_KWARGSENTRY._serialized_end=876
  _DAEMONAPI._serialized_start=1516
  _DAEMONAPI._serialized_end=1732
# @@protoc_insertion_point(module_scope)
