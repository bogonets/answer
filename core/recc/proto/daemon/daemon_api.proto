syntax = "proto3";

package recc.proto.daemon;

service DaemonApi {
    rpc Heartbeat (Pit) returns (Pat) {}
    rpc Register (RegisterQ) returns (RegisterA) {}
    rpc Packet (PacketQ) returns (PacketA) {}
}

message Pit {
    float delay = 1;
}

message Pat {
    bool ok = 1;
}

enum RegisterCode {
    Success = 0;
    NotFoundRegisterFunction = 1;
}

message RegisterQ {
    string session = 1;
    repeated string args = 2;
    map<string, string> kwargs = 3;
    string test_sm_name = 4;
    string test_sm_pass = 5;
}

message RegisterA {
    RegisterCode code = 1;
    bool is_sm = 2;
    int32 min_sm_size = 3;
    int32 min_sm_byte = 4;
}

enum Coding {
    Raw = 0;
    Pickle5 = 1;

    // Automatically select the installed json library.
    Json = 2;
    JsonZlib = 3;
    JsonGzip = 4;
    JsonLzma = 5;
    JsonBz2 = 6;

    // System default json library.
    Pyjson = 7;
    PyjsonZlib = 8;
    PyjsonGzip = 9;
    PyjsonLzma = 10;
    PyjsonBz2 = 11;

    // orjson module
    Orjson = 12;
    OrjsonZlib = 13;
    OrjsonGzip = 14;
    OrjsonLzma = 15;
    OrjsonBz2 = 16;

    // msgpack module
    Msgpack = 17;
    MsgpackZlib = 18;
    MsgpackGzip = 19;
    MsgpackLzma = 20;
    MsgpackBz2 = 21;

    // yaml module
    Yaml = 22;
    YamlZlib = 23;
    YamlGzip = 24;
    YamlLzma = 25;
    YamlBz2 = 26;
}

message ArrayInfo {
    repeated int32 shape = 1;
    string dtype = 2;
    repeated int32 strides = 3;
}

message Content {
    int32 size = 1;
    bytes data = 2;

    optional string sm_name = 3;
    optional ArrayInfo array = 4;
}

message PacketQ {
    string session = 1;

    string method = 2;
    string path = 3;
    Coding coding = 4;

    repeated Content args = 5;
    map<string, Content> kwargs = 6;

    repeated string sm_names = 7;
}

message PacketA {
    repeated Content args = 3;
    map<string, Content> kwargs = 4;
}
