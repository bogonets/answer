#!/usr/bin/env bash

SERVICE_NAME=recc.service
NAMESPACE=recc
SYSTEMCTL_OPT=()
JOURNALCTL_OPT=()

SERVICE_PATH="/etc/systemd/system/$SERVICE_NAME"
JOURNAL_PATH="/etc/systemd/journald@$NAMESPACE.conf"

if [[ $(lsb_release -sr | sed 's/\.//') -gt 1804 ]]; then
    JOURNALCTL_OPT+=("--namespace=$NAMESPACE")
fi

USAGE_MESSAGE="
systemctl for recc service.

  Usage: $0 [command] [command-args] ...

Available commands:
  help          Print this message.
  edit          Edit unit file
  list          List units currently in memory
  files         List installed unit files
  daemon-reload Daemon reload
  up            Daemon reload, enable, start
  down          Daemon stop, disable, reload
  enable        Enable unit file
  disable       Disable unit file
  reload        Reload unit
  status        Show runtime status of unit
  start         Start (activate) unit
  stop          Stop (deactivate) unit
  restart       Start or restart unit
  kill          Send signal to processes of a unit
  clean         Clean runtime, cache, state, logs or configuration of unit
  log           Query the systemd journal

Configurations:
  Service name: $SERVICE_NAME
  Service file: $SERVICE_PATH
  Journal namespace: $NAMESPACE
  Journal file: $JOURNAL_PATH

journalctl examples:
  journalctl -b
    Show current Boot
  journalctl -S today
    Show entries not older than the specified date (Since)
  journalctl -U yesterday
    Show entries not newer than the specified date (Until)
  journalctl -S '2021-01-01 00:00:00' -U '2021-12-31 23:59:59'
    Show entries from [S] to [U].
  journalctl --vacuum-size=100M
    Reduce disk usage below specified size
  journalctl --vacuum-time=2weeks
    Remove journal files older than specified time
"

COMMAND=$1
shift 1

if [[ -z $COMMAND ]]; then
    echo "Empty argument" 1>&2
    echo "$USAGE_MESSAGE"
    exit 1
fi

case "$COMMAND" in
    help|--help|-h)
        echo "$USAGE_MESSAGE"
        exit 0
        ;;
    edit-service)
        "$EDITOR" "$SERVICE_PATH"
        ;;
    edit-journal)
        "$EDITOR" "$JOURNAL_PATH"
        ;;
    list)
        systemctl "${SYSTEMCTL_OPT[@]}" list-units
        ;;
    files)
        systemctl "${SYSTEMCTL_OPT[@]}" list-unit-files
        ;;
    daemon-reload)
        systemctl "${SYSTEMCTL_OPT[@]}" daemon-reload
        ;;
    up)
        systemctl "${SYSTEMCTL_OPT[@]}" daemon-reload
        systemctl "${SYSTEMCTL_OPT[@]}" enable $SERVICE_NAME
        systemctl "${SYSTEMCTL_OPT[@]}" start $SERVICE_NAME
        ;;
    down)
        systemctl "${SYSTEMCTL_OPT[@]}" stop $SERVICE_NAME
        systemctl "${SYSTEMCTL_OPT[@]}" disable $SERVICE_NAME
        systemctl "${SYSTEMCTL_OPT[@]}" daemon-reload
        ;;
    enable)
        systemctl "${SYSTEMCTL_OPT[@]}" enable $SERVICE_NAME "$@"
        ;;
    disable)
        systemctl "${SYSTEMCTL_OPT[@]}" disable $SERVICE_NAME "$@"
        ;;
    reload)
        systemctl "${SYSTEMCTL_OPT[@]}" reload $SERVICE_NAME "$@"
        ;;
    status)
        systemctl "${SYSTEMCTL_OPT[@]}" status $SERVICE_NAME "$@"
        ;;
    start)
        systemctl "${SYSTEMCTL_OPT[@]}" start $SERVICE_NAME "$@"
        ;;
    stop)
        systemctl "${SYSTEMCTL_OPT[@]}" stop $SERVICE_NAME "$@"
        ;;
    restart)
        systemctl "${SYSTEMCTL_OPT[@]}" restart $SERVICE_NAME "$@"
        ;;
    kill)
        systemctl "${SYSTEMCTL_OPT[@]}" kill $SERVICE_NAME "$@"
        ;;
    clean)
        systemctl "${SYSTEMCTL_OPT[@]}" clean $SERVICE_NAME "$@"
        ;;
    log|journal|journalctl)
        journalctl "${JOURNALCTL_OPT[@]}" -u $SERVICE_NAME "$@"
        ;;
    *)
        echo "Unrecognized argument: $1" 1>&2
        echo "$USAGE_MESSAGE"
        exit 1
        ;;
esac
